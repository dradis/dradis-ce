<% cache ['issues-table', @all_columns, issues.map(&:id), @issues.map(&:updated_at).map(&:to_i).sort.last] do %>
    <table class="table table-striped mb-0"
      data-behavior="dradis-datatable"
      data-default-columns="<%= @default_columns.to_json %>"
      data-item-name="issue"
      data-local-storage-key="project.ce.<%= dom_id(current_project) %>.issues_datatable"
      data-tags='<%= @tags.map { |t| [t.display_name, t.color, t.name] }.to_json %>'
      data-tags-path="<%= project_tags_path(current_project) %>"
      data-new-tag-path="<%= new_project_tag_path(current_project) %>"
      >
      <thead>
        <tr>
          <th class="no-sort" data-column-visible="false"><span class="sr-only">Select</span></th>
          <% @all_columns.each do |column| %>
            <th><%= column %></th>
          <% end %>
          <th class="no-sort" data-column-visible="false"><span class="sr-only">Actions</span></th>
        </tr>
      </thead>
      <tbody>
        <% issues.each do |issue| %>
        <% cache [issue, @all_columns, issue.affected_count, 'issues-table'] do %>
        <tr id="issue-<%= issue.id %>" data-tag-url="<%= project_issue_path(current_project, issue) %>">
          <td class="select-checkbox" data-behavior="select-checkbox"></td>
          <% @all_columns.each do |column| %>
            <%
             sort, display =
             case column
             when 'Title'
               [issue.title, link_to(issue.title, [current_project, issue])]
             when 'Tags'
               [
                 issue.tags.any? ? issue.tags.first.display_name : '',
                 tag_and_name_for(issue)
               ]
             when 'Affected'
               # this count is coming from the SQL finder in the controller
               [
                 issue.affected_count,
                 issue.affected.map { |node| link_to(node.label, [current_project, node]) }.join("\n").html_safe
               ]
             when 'Created'
               [issue.created_at.to_i, local_time_ago(issue.created_at)]
             when 'Created by'
               [issue.author, issue.author]
             when 'Updated'
               [issue.updated_at.to_i, local_time_ago(issue.updated_at)]
             else
               [issue.fields.fetch(column, ''), markup(issue.fields.fetch(column, ''))]
             end
            %>
            <%= content_tag :td,
                display,
                class: class_names('text-break-spaces': column == 'Affected'),
                data: {
                  behavior: class_names(tag: column == 'Tags'),
                  sort: sort
                }
            %>
          <% end  %>
          <td class="column-actions">
            <%= link_to edit_project_issue_path(current_project, issue), class: '' do %>
              <i class="fa fa-pencil"></i> Edit
            <% end %>
            <%= link_to [current_project, issue], method: :delete, data: { confirm: "Are you sure?\n\nProceeding will delete this issue and any associated evidence." }, class: 'text-error-hover' do %>
              <i class="fa fa-trash"></i> Delete
            <% end %>
          </td>
        </tr>
        <% end %>
      <% end %>
    </tbody>
  </table>
<% end %>
